import pigpio
import time
import sys
import select

# Initialize pigpio
pi = pigpio.pi()

# Pin configuration
COIN_PIN = 17      # Coin pulse input pin
BILL_PIN = 18      # Bill pulse input pin
INHIBIT_PIN = 23   # Bill acceptor disable pin (active high)

# Pulse counting variables
coin_pulse_count = 0
coin_last_pulse_time = time.time()

bill_pulse_count = 0
bill_last_pulse_time = time.time()

# Timing constants
COIN_TIMEOUT = 0.5    # seconds without pulses = end of coin
PULSE_TIMEOUT = 0.5   # Time to wait for additional bill pulses
DEBOUNCE_TIME = 0.1   # Minimum time between pulses

# Total amount tracking
total_amount = 0

def set_acceptor_state(enable):
    """Enable/disable the bill acceptor"""
    pi.write(INHIBIT_PIN, 0 if enable else 1)  # LOW = enabled, HIGH = disabled
    print(f"\nBill acceptor {'enabled' if enable else 'disabled'}")

def coin_pulse_detected(gpio, level, tick):
    global coin_pulse_count, coin_last_pulse_time
    current_time = time.time()
    if current_time - coin_last_pulse_time > DEBOUNCE_TIME:
        coin_pulse_count += 1
        coin_last_pulse_time = current_time

def bill_pulse_detected(gpio, level, tick):
    global bill_pulse_count, bill_last_pulse_time
    current_time = time.time()
    if current_time - bill_last_pulse_time > DEBOUNCE_TIME:
        bill_pulse_count += 1
        bill_last_pulse_time = current_time

def get_coin_value(pulses):
    if pulses == 1:
        return 1
    elif 5 <= pulses <= 7:
        return 5
    elif 10 <= pulses <= 12:
        return 10
    else:
        return 0

def get_bill_value(pulses):
    if pulses == 2:
        return 20
    elif pulses == 5:
        return 50
    elif pulses == 10:
        return 100
    elif pulses == 50:
        return 500
    else:
        return 0

# Setup GPIO
# Coin acceptor
pi.set_mode(COIN_PIN, pigpio.INPUT)
pi.set_pull_up_down(COIN_PIN, pigpio.PUD_UP)
pi.callback(COIN_PIN, pigpio.FALLING_EDGE, coin_pulse_detected)

# Bill acceptor
pi.set_mode(BILL_PIN, pigpio.INPUT)
pi.set_pull_up_down(BILL_PIN, pigpio.PUD_UP)
pi.set_mode(INHIBIT_PIN, pigpio.OUTPUT)
set_acceptor_state(True)  # Start enabled
pi.callback(BILL_PIN, pigpio.FALLING_EDGE, bill_pulse_detected)

def check_keyboard_input():
    while sys.stdin in select.select([sys.stdin], [], [], 0)[0]:
        key = sys.stdin.read(1)
        if key == '1':
            set_acceptor_state(True)
        elif key == '2':
            set_acceptor_state(False)

print("Integrated Coin and Bill Acceptor System")
print("Press:")
print("1 - Enable bill acceptor")
print("2 - Disable bill acceptor")
print("Ctrl+C - Exit program")
print("\nWaiting for coins and bills...")

try:
    while True:
        now = time.time()
        
        # Check for keyboard input
        check_keyboard_input()
        
        # Process coin pulses
        if coin_pulse_count > 0 and (now - coin_last_pulse_time > COIN_TIMEOUT):
            total_amount += get_coin_value(coin_pulse_count)
            coin_pulse_count = 0
            
        # Process bill pulses
        if bill_pulse_count > 0 and (now - bill_last_pulse_time > PULSE_TIMEOUT):
            total_amount += get_bill_value(bill_pulse_count)
            bill_pulse_count = 0
            
        # Display total
        print(f"\rTotal amount inserted: P{total_amount}", end="")
        sys.stdout.flush()
        time.sleep(0.05)

except KeyboardInterrupt:
    print("\n\nShutting down...")
    set_acceptor_state(False)  # Disable on exit
finally:
    pi.stop()
